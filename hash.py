import hashlib
from telethon.tl.types import Message
from .. import loader, utils


@loader.tds
class HashMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ö–µ—à–∞ —Ñ–∞–π–ª–∞"""

    strings = {
        "name": "FileHash",
        "no_reply": "üö´ <b>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–æ–º</b>",
        "no_file": "üö´ <b>–í —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç —Ñ–∞–π–ª–∞</b>",
        "hash_result": "üìÑ <b>–•–µ—à —Ñ–∞–π–ª–∞:</b>\n\n<code>MD5:</code> {}\n<code>SHA-1:</code> {}\n<code>SHA-256:</code> {}",
    }

    strings_ru = {
        "_cmd_doc_hash": "–í—ã—á–∏—Å–ª–∏—Ç—å —Ö–µ—à —Ñ–∞–π–ª–∞ (MD5, SHA-1, SHA-256)",
    }

    async def hashcmd(self, message: Message):
        """–í—ã—á–∏—Å–ª–∏—Ç—å —Ö–µ—à —Ñ–∞–π–ª–∞"""
        reply = await message.get_reply_message()

        if not reply or not reply.file:
            await utils.answer(message, self.strings("no_reply"))
            return

        file = reply.file
        if not file.size:
            await utils.answer(message, self.strings("no_file"))
            return

        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file_data = await reply.download_media(bytes)

        # –í—ã—á–∏—Å–ª—è–µ–º —Ö–µ—à–∏
        md5_hash = hashlib.md5(file_data).hexdigest()
        sha1_hash = hashlib.sha1(file_data).hexdigest()
        sha256_hash = hashlib.sha256(file_data).hexdigest()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await utils.answer(
            message,
            self.strings("hash_result").format(md5_hash, sha1_hash, sha256_hash),
        )