# ---------------------------------------------------------------------------------
# Name: valutator
# Description: Valute converter
# Author: @Azu_nyyyyyyaaaaan
# --------------------------------------------------------------------------------

import asyncio
from telethon import events
from telethon.errors.rpcerrorlist import YouBlockedUserError

from .. import loader, utils


def register(cb):
    cb(ValuesMod())


class ValuesMod(loader.Module):
    """–†–∞–±–æ—Ç–∞–µ—Ç —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞ @Deltatale_Currency_Converter_Bot
    """

    strings = {"name": "Valutator"}

    async def currcmd(self, message):
        """.curr <–∫–æ–ª-–≤–æ> <–≤–∞–ª—é—Ç–∞>
        –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤–∞–ª—é—Ç—ã
        –ü—Ä–∏–º–µ—Ä: '.curr 5000 —Ä—É–±–ª–µ–π/—Ä—É–±/rub/RUB'
        """
        state = utils.get_args_raw(message)
        chat = "@Deltatale_Currency_Converter_Bot"
        async with message.client.conversation(chat) as conv:
            try:
                await message.edit("<emoji document_id=5346192260029489215>üíµ</emoji> <b>–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é...</b>")
                response = conv.wait_event(
                    events.NewMessage(incoming=True, from_users=6215875699)
                )
                bot_send_message = await message.client.send_message(
                    chat, format(state)
                )
                bot_response = response = await response
            except YouBlockedUserError:
                await message.edit("<b>–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π</b> " + chat)
                return
            await bot_send_message.delete()
            await message.edit(response.text)
            await bot_response.delete()
