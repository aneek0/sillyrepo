# meta developer: @Eraminel01
from .. import loader, utils
from telethon.tl.types import Message

@loader.tds
class VivoMod(loader.Module):
    strings = {
        "name": "üì± –°–º–∞—Ä—Ç—Ñ–æ–Ω vivo"
    }

    async def client_ready(self, client, db):
        self.db = db
        self._client = client
        self.enabled = self.db.get("vivophone", "enabled", False)

    async def tvivocmd(self, message: Message):
        """–í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å –í–ò–í–û"""
        self.enabled = not self.enabled
        self.db.set("vivophone", "enabled", self.enabled)
        
        if self.enabled:
            return await utils.answer(
                message=message,
                response="<b>üì± Vivo —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω. –î–∞–π –±–æ–≥ —Ç–µ–±–µ –Ω–∞–∫–∞–∂–µ—Ç. –°–º–∞—Ä—Ç—Ñ–æ–Ω vivo</b>"
            )
        else:
            return await utils.answer(
                message=message,
                response="‚ùå <b>Vivo –æ—Ç–∫–ª—é—á–µ–Ω</b>"
            )

    async def watcher(self, message: Message):
        if self.enabled and message.out:
            new_text = (message.text or "") + "\n–°–º–∞—Ä—Ç—Ñ–æ–Ω vivo"
            await self._client.edit_message(message.peer_id, message.id, new_text)
