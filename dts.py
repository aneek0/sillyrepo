# meta developer: Azu-nyyyyyyaaaaan
# üîê This code is licensed under CC-BY-NC Licence! - https://creativecommons.org/licenses/by-nc/4.0/

from telethon import events
from telethon.tl.types import MessageMediaDocument, MessageMediaPhoto

from .. import loader, utils

@loader.tds
class DTSMpd(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."""
    strings = {"name": "Dts"}

    def __init__(self):
        self.config = loader.ModuleConfig(
            "DOWNLOAD_DIR", "downloads", "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
        )

    @loader.owner
    async def downcmd(self, message):
        """–°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –¥–∞–Ω –æ—Ç–≤–µ—Ç."""
        if not message.is_reply:
            await utils.answer(message, "<b>[Downloader]</b> –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–æ–º.")
            return

        reply_message = await message.get_reply_message()
        if not reply_message or not (reply_message.media and (isinstance(reply_message.media, (MessageMediaDocument, MessageMediaPhoto)))):
            await utils.answer(message, "<b>[Downloader]</b> –í –æ—Ç–≤–µ—á–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.")
            return

        download_dir = self.config["DOWNLOAD_DIR"]
        if not os.path.exists(download_dir):
            os.makedirs(download_dir)

        await utils.answer(message, f"<b>[Downloader]</b> –ù–∞—á–∏–Ω–∞—é —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤ <code>{download_dir}</code>...")
        
        try:
            file_path = await reply_message.download_media(file=download_dir)
            await utils.answer(message, f"<b>[Downloader]</b> –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ <code>{file_path}</code>.")
        except Exception as e:
            await utils.answer(message, f"<b>[Downloader]</b> –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: <code>{e}</code>")

